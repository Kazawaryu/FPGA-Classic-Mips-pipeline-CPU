.data 0x0000				      		
	buf: .word 0x0000
.text 0x0000
#寄存器初始化				
start:
	lui   $1,0xFFFF	                    
        ori   $28,$1,0xF000         #设置$28=0xFFFFF000
        lui   $12,0x0000               #$12=0

        ori $27,$12,0x8000         #设置$27=0x00008000
	#16
	ori $26,$12,0x0010         #$26=16
	ori $19,$12,0x0001         #$19=1
	ori $18,$12,0x0000         #$18=0

#检测高16位,定位到label
main:
	#lui $8,0xffff                        
        #ori $8,$8,0xffff
        #sw $8,0xC62($28)       #确认处于main状态 用于debug

	lw $2,0xC72($28)            #获取左边八个拨码开关的值，即$2=样例编号
	ori $13,$12,0x0000          #$13=24'b0,00000000
	beq $2,$13,L1                  #进入场景0
	ori $13,$12,0x0020          #$13=24'b0,00100000       
	beq $2,$13,L2              
	ori $13,$12,0x0040          #$13=24'b0,01000000
	beq $2,$13,L3                
	ori $13,$12,0x0060          #$13=24'b0,01100000
	beq $2,$13,L4
	ori $13,$12,0x0080          #$13=24'b0,10000000
	beq $2,$13,L5
	ori $13,$12,0x00a0          #$13=24'b0,10100000
	beq $2,$13,L6
	ori $13,$12,0x00c0          #$13=24'b0,11000000
	beq $2,$13,L7
	ori $13,$12,0x00e0          #$13=24'b0,11100000
	beq $2,$13,L8
	j main

L1:
    add $20,$18,$18             #$20=0,不展示细节
    j Input

L2:
    add $20,$18,$19             #$20=1,展示出栈入栈次数之和
    j Input

L3:
    add $20,$19,$19             #$20=2,展示每次入栈参数
    j Input

L4:
    add $20,$19,$19
    add $20,$20,$19             #$20=3,展示每次入栈参数
    j Input

Input:
    #case : 000
	lw $2,0xC72($28)
	#(1)load the data from right 16bit
	#20:origin
	lw   $20,0xC70($28)
        sw   $20,0xC60($28)            
	beq $2,$12,L1                #不停地读数字，直到确认键拨起（即前八个拨码开关不全是0）
	
    add $s3,$18,$20
    add $4,$18,$18
    add $5,$18,$18

Stack:
    #$3=n, $4=res, $5=cnt




Show:
    lui $15,0x0200
	ori $15,$15,0x00ff          #大约5s

    #counter:
    lui  $27,0x0000 
	addi $10,$27,0

    

